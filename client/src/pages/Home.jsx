import React from 'react';
import { Loader, Card, FormField } from '../components';

const RenderCards = ({ data, title }) => {
	if (data?.length > 0) return data.map(post => <Card key={post._id} {...post}></Card>);

	return <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>{title}</h2>;
};

const Home = props => {
	const [loading, setLoading] = React.useState(false);
	const [allPosts, setAllPosts] = React.useState(null);
	const [searchText, setSearchText] = React.useState('');
	const [searchedResults, setSearchedResults] = React.useState(null);
	const [searchTimeout, setSearchTimeout] = React.useState(null);

	React.useEffect(() => {
		const fetchPosts = async () => {
			setLoading(true);
			try {
				const response = await fetch('http://localhost:8080/api/v1/post', {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json'
					}
				});

				if (response.ok) {
					const result = await response.json();
					// console.log('Effect get: ', result.data);
					setAllPosts(result.data.reverse());
				}
			} catch (error) {
				console.error(error);
			} finally {
				setLoading(false);
			}
		};

		fetchPosts();
	}, []);

	const handleSearchChange = e => {
		clearTimeout(searchTimeout);
		setSearchText(e.target.value);

		setSearchTimeout(
			setTimeout(() => {
				const searchResults = Array.from(allPosts).filter(
					item =>
						item.name.toLowerCase().includes(searchText.toLowerCase()) ||
						item.prompt.toLowerCase().includes(searchText.toLowerCase())
				);

				setSearchedResults(searchResults);
			}, searchTimeout)
		);
	};

	return (
		<section className='max-w-7xl mx-auto'>
			<div>
				<h1 className='font-extrabold text-[#222328] text-[32px]'></h1>
				<p className='mt-2 text-[#666e75] text-[14px] max-w-[500px]'>
					Browse through a collection of imaginative and visually stunnig images generated by ALL-E AI
				</p>
			</div>
			<div className='mt-16'>
				<FormField
					labelName='Search Posts'
					type='text'
					name='text'
					placeholder='Search posts'
					value={searchText}
					handleChange={handleSearchChange}
				/>
			</div>

			<div className='mt-10'>
				{loading ? (
					<div className='flex justify-center items-center'>
						<Loader />
					</div>
				) : (
					<>
						{searchText && (
							<h2 className='font-medium text-[#666e75] texxt-xl mb-3'>
								Showing results for <span className='text-[#222328]'>{searchText}</span>
							</h2>
						)}
						<div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
							{searchText ? (
								<RenderCards data={searchedResults} title='No searh results found' />
							) : (
								<RenderCards data={allPosts} title='No posts found' />
							)}
						</div>
					</>
				)}
			</div>
		</section>
	);
};

export default Home;
